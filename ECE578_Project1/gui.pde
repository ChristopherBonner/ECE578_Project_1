/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void Exit_click(GButton source, GEvent event) { //_CODE_:Exit:710982:
  println("Exit - GButton >> GEvent." + event + " @ " + millis());
  exit();
} //_CODE_:Exit:710982:

public void ScenA_clicked(GOption source, GEvent event) { //_CODE_:Scenario_A:899812:
  println("Scenario_A - GOption >> GEvent." + event + " @ " + millis());
  reset_everything();
  setup_scene_A();
  
  scene = 0;
} //_CODE_:Scenario_A:899812:

public void ScenB_clicked(GOption source, GEvent event) { //_CODE_:Scenario_B:753477:
  println("Scenario_B - GOption >> GEvent." + event + " @ " + millis());
  reset_everything();
  setup_scene_B();

  scene = 1;
} //_CODE_:Scenario_B:753477:

public void coll_avoid_clicked(GOption source, GEvent event) { //_CODE_:coll_avoid:461684:
  println("coll_avoid - GOption >> GEvent." + event + " @ " + millis());
  reset_everything();
} //_CODE_:coll_avoid:461684:

public void carrier_sense_clicked(GOption source, GEvent event) { //_CODE_:carrier_sense:562831:
  println("carrier_sense - GOption >> GEvent." + event + " @ " + millis());
  reset_everything();
} //_CODE_:carrier_sense:562831:

public void advance_click(GButton source, GEvent event) { //_CODE_:advance:764250:
  //println("advance - GButton >> GEvent." + event + " @ " + millis());
  
  tick +=1;
  sim_tick(0);
  
  
} //_CODE_:advance:764250:

public void Play_click(GButton source, GEvent event) { //_CODE_:Play:258134:
  println("Play - GButton >> GEvent." + event + " @ " + millis());
  play = true;
} //_CODE_:Play:258134:

public void pause_click(GButton source, GEvent event) { //_CODE_:pause:285764:
  println("pause - GButton >> GEvent." + event + " @ " + millis());
  play = false;
} //_CODE_:pause:285764:

public void reset_click(GButton source, GEvent event) { //_CODE_:reset:446879:
  println("reset - GButton >> GEvent." + event + " @ " + millis());
  reset_everything();
} //_CODE_:reset:446879:

public void fpt1_clicked(GOption source, GEvent event) { //_CODE_:fpt1:385218:
  println("tps1 - GOption >> GEvent." + event + " @ " + millis());
  frames_per_tick = 1;
} //_CODE_:fpt1:385218:

public void fpt10_clicked(GOption source, GEvent event) { //_CODE_:fpt10:291093:
  println("tps10 - GOption >> GEvent." + event + " @ " + millis());
  frames_per_tick = 10;
} //_CODE_:fpt10:291093:

public void fpt100_clicked(GOption source, GEvent event) { //_CODE_:fpt100:224268:
  println("tps100 - GOption >> GEvent." + event + " @ " + millis());
  frames_per_tick = 100;
} //_CODE_:fpt100:224268:

public void fpt_1_clicked(GOption source, GEvent event) { //_CODE_:fpt_1:666571:
  println("fpt_1 - GOption >> GEvent." + event + " @ " + millis());
  frames_per_tick = -1;
} //_CODE_:fpt_1:666571:

public void fpt_2_clicked1(GOption source, GEvent event) { //_CODE_:fpt_2:596532:
  println("fpt_2 - GOption >> GEvent." + event + " @ " + millis());
  frames_per_tick = -2;
} //_CODE_:fpt_2:596532:

public void fpt_3_clicked(GOption source, GEvent event) { //_CODE_:fpt_3:507343:
  println("fpt_3 - GOption >> GEvent." + event + " @ " + millis());
  frames_per_tick = -3;
} //_CODE_:fpt_3:507343:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  surface.setTitle("Sketch Window");
  Exit = new GButton(this, 0, 0, 80, 30);
  Exit.setText("EXIT");
  Exit.setTextBold();
  Exit.addEventHandler(this, "Exit_click");
  Scenario = new GToggleGroup();
  Scenario_A = new GOption(this, 10, 40, 120, 20);
  Scenario_A.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  Scenario_A.setText("Concurrent");
  Scenario_A.setTextBold();
  Scenario_A.setOpaque(false);
  Scenario_A.addEventHandler(this, "ScenA_clicked");
  Scenario_B = new GOption(this, 10, 62, 120, 20);
  Scenario_B.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  Scenario_B.setText("Hidden");
  Scenario_B.setTextBold();
  Scenario_B.setOpaque(false);
  Scenario_B.addEventHandler(this, "ScenB_clicked");
  Scenario.addControl(Scenario_A);
  Scenario_A.setSelected(true);
  Scenario.addControl(Scenario_B);
  Protocol = new GToggleGroup();
  coll_avoid = new GOption(this, 160, 40, 160, 20);
  coll_avoid.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  coll_avoid.setText("Collision Avoidance");
  coll_avoid.setTextBold();
  coll_avoid.setOpaque(false);
  coll_avoid.addEventHandler(this, "coll_avoid_clicked");
  carrier_sense = new GOption(this, 160, 60, 160, 20);
  carrier_sense.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  carrier_sense.setText("Virtual Carrier Sensing");
  carrier_sense.setTextBold();
  carrier_sense.setOpaque(false);
  carrier_sense.addEventHandler(this, "carrier_sense_clicked");
  Protocol.addControl(coll_avoid);
  coll_avoid.setSelected(true);
  Protocol.addControl(carrier_sense);
  advance = new GButton(this, 274, 785, 80, 30);
  advance.setText("TICK");
  advance.setTextBold();
  advance.addEventHandler(this, "advance_click");
  Play = new GButton(this, 160, 0, 80, 30);
  Play.setText("PLAY");
  Play.setTextBold();
  Play.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  Play.addEventHandler(this, "Play_click");
  pause = new GButton(this, 240, 0, 80, 30);
  pause.setText("PAUSE");
  pause.setTextBold();
  pause.setLocalColorScheme(GCScheme.YELLOW_SCHEME);
  pause.addEventHandler(this, "pause_click");
  reset = new GButton(this, 320, 0, 80, 30);
  reset.setText("RESET");
  reset.setTextBold();
  reset.setLocalColorScheme(GCScheme.RED_SCHEME);
  reset.addEventHandler(this, "reset_click");
  Playback_Speed = new GToggleGroup();
  fpt1 = new GOption(this, 380, 100, 120, 20);
  fpt1.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  fpt1.setText("1 frame/tick");
  fpt1.setTextBold();
  fpt1.setOpaque(false);
  fpt1.addEventHandler(this, "fpt1_clicked");
  fpt10 = new GOption(this, 380, 120, 120, 20);
  fpt10.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  fpt10.setText("10 frames/tick");
  fpt10.setTextBold();
  fpt10.setOpaque(false);
  fpt10.addEventHandler(this, "fpt10_clicked");
  fpt100 = new GOption(this, 380, 140, 120, 20);
  fpt100.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  fpt100.setText("100 frames/tick");
  fpt100.setTextBold();
  fpt100.setOpaque(false);
  fpt100.addEventHandler(this, "fpt100_clicked");
  fpt_1 = new GOption(this, 380, 80, 120, 20);
  fpt_1.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  fpt_1.setText("1 frame/10 ticks");
  fpt_1.setTextBold();
  fpt_1.setOpaque(false);
  fpt_1.addEventHandler(this, "fpt_1_clicked");
  fpt_2 = new GOption(this, 380, 60, 120, 20);
  fpt_2.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  fpt_2.setText("1 frame/100 ticks");
  fpt_2.setTextBold();
  fpt_2.setOpaque(false);
  fpt_2.addEventHandler(this, "fpt_2_clicked1");
  fpt_3 = new GOption(this, 380, 40, 140, 20);
  fpt_3.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  fpt_3.setText("1 frame/1000 ticks");
  fpt_3.setTextBold();
  fpt_3.setOpaque(false);
  fpt_3.addEventHandler(this, "fpt_3_clicked");
  Playback_Speed.addControl(fpt1);
  Playback_Speed.addControl(fpt10);
  Playback_Speed.addControl(fpt100);
  fpt100.setSelected(true);
  Playback_Speed.addControl(fpt_1);
  Playback_Speed.addControl(fpt_2);
  Playback_Speed.addControl(fpt_3);
}

// Variable declarations 
// autogenerated do not edit
GButton Exit; 
GToggleGroup Scenario; 
GOption Scenario_A; 
GOption Scenario_B; 
GToggleGroup Protocol; 
GOption coll_avoid; 
GOption carrier_sense; 
GButton advance; 
GButton Play; 
GButton pause; 
GButton reset; 
GToggleGroup Playback_Speed; 
GOption fpt1; 
GOption fpt10; 
GOption fpt100; 
GOption fpt_1; 
GOption fpt_2; 
GOption fpt_3; 